{
  "NixOS Container Arion": {
    "scope": "nix",
    "prefix": "nca",
    "description": "Boilerplate NixOS Container via Arion",
    "body": [
      "{",
      "  config,",
      "  inputs,",
      "  lib,",
      "  ...",
      "}:",
      "with lib; let",
      "  cfg = config.custom.containers.$1;",
      "in {",
      "  options.custom.containers.$1 = {",
      "    enable = mkOption {default = false;};",
      "  };",
      "",
      "  config = mkIf cfg.enable {",
      "    age.secrets = let",
      "      secret = filename: {",
      "        file = \"${inputs.self}/secrets/\\${filename}\";",
      "      };",
      "    in {",
      "      \"${config.custom.profile}/$1/.env\" = secret \"${config.custom.profile}/$1/.env\";",
      "    };",
      "",
      "    #?? arion-$1 pull",
      "    environment.shellAliases.arion-$1 = \"sudo arion --prebuilt-file ${config.virtualisation.arion.projects.$1.settings.out.dockerComposeYaml}\";",
      "",
      "    virtualisation.arion.projects.$1.settings.services = {",
      "      $1.service = {",
      "        container_name = \"$1\";",
      "        depends_on = [\"\"];",
      "        env_file = [config.age.secrets.\"${config.custom.profile}/$1/.env\".path];",
      "        image = \"$1\";",
      "        ports = [\"\"];",
      "        restart = \"unless-stopped\";",
      "        volumes = [\"${config.custom.containers.directory}/$1/data:/data\"];",
      "      };",
      "    };",
      "  };",
      "}",
    ]
  }
}
